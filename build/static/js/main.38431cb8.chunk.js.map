{"version":3,"sources":["providers/StyleProvider.jsx","components/Header/index.jsx","components/Header/Title/index.jsx","components/Header/Body/index.jsx","components/Cards/Book/index.jsx","components/Cards/Book/Title/index.jsx","components/Cards/Book/Body/index.jsx","components/Cards/Book/Footer/index.jsx","components/Cards/Book/Description/index.jsx","components/Lists/DecoratedList/Item/index.jsx","components/Lists/DecoratedList/index.jsx","components/Image/index.jsx","components/Form/CreateBookForm.jsx","App.jsx","index.jsx"],"names":["GlobalStyle","createGlobalStyle","StyleProvider","children","CssBaseline","Title","Body","style","inlineSize","HeaderBox","styled","Box","Header","props","alignContent","textAlign","Typography","component","variant","Book","Card","sx","maxWidth","minWidth","title","subheader","CardHeader","CardContent","paddingTop","Grid","container","direction","Footer","Description","item","Decorator","DecoratedList","Item","decorated","justifyContent","padding","Image","space","layout","CreateBookForm","setBooks","useState","author","releaseYear","bookRating","runTime","writers","actors","imageURL","description","BookData","setBookData","handleSubmit","e","preventDefault","console","log","axios","post","process","Books","handleClear","onSubmit","backgroundColor","gap","margin","xs","TextField","size","label","fullWidth","value","onChange","target","Button","type","onClick","App","useEffect","get","then","res","data","Items","spacing","length","map","authors","index","actor","src","width","render","document","querySelector"],"mappings":"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","file":"static/js/main.38431cb8.chunk.js","sourcesContent":["import { CssBaseline } from \"@mui/material\";\nimport { createGlobalStyle } from \"styled-components\";\n\n/**\n * Feel free to add any global styling to this project by writing valid CSS in the code below.\n */\n\nconst GlobalStyle = createGlobalStyle`\n    html, body {\n        background-color: #192437;\n    }\n`;\n\nexport const StyleProvider = ({ children }) => {\n    return (\n        <>\n            <CssBaseline />\n            <GlobalStyle />\n            {children}\n        </>\n    );\n}","import { Typography, Box, styled } from '@mui/material';\nimport { Title as _Title } from './Title';\nimport { Body as _Body } from './Body';\n\nexport const Title = _Title;\nexport const Body = _Body;\n\nconst HeaderBox = styled(Box)`\n    margin-top: 3em;\n    padding: 1em;\n    background-color: #343F50;\n    border-radius: 50%;\n    /* color: #D0D7DB; */\n    color: #FFFFFF;\n`;\n\nconst Header = ({children, props}) => {\n    return (\n        !children ? null : \n        <HeaderBox alignContent=\"center\" textAlign=\"center\" {...props}>\n            <Typography component={'span'} variant='body2'>\n                {children}\n            </Typography>\n        </HeaderBox>\n    );\n};\n\nexport default Header;","export const Title = ({children}) => {\n    return (\n        <div>\n            <h2>{children}</h2>\n        </div>\n    );\n}","export const Body = ({children}) => {\n    return (\n        <div style={{inlineSize: '20vw'}}>\n            {children}\n        </div>\n    );\n}","import { Card } from '@mui/material';\nimport { Title } from './Title';\nimport { Body } from './Body';\nimport { Footer } from './Footer';\nimport { Description } from './Description';\n\nconst Book = ({ children, ...props }) => {\n  return (\n    <Card sx={{ maxWidth: '80vw', minWidth: '80vw' }} {...props}>\n      {children}\n    </Card>\n  );\n};\n\nBook.Title = Title;\nBook.Body = Body;\nBook.Footer = Footer;\nBook.Description = Description;\n\nexport { Book };\nexport default Book;\n","import { CardHeader } from '@mui/material';\n\nexport const Title = ({title, subheader, ...props}) => {\n    return (\n        <CardHeader title={title} subheader={subheader} {...props}/>\n    );\n}","import { Grid, CardContent } from '@mui/material';\n\nexport const Body = ({children, ...props}) => {\n    return (\n        <CardContent sx={{paddingTop: '0px'}} {...props}>\n            <Grid container direction=\"column\">\n                {children}\n            </Grid>\n        </CardContent>\n    );\n}","export const Footer = () => {\n    return (\n        <></>\n    );\n}","import { Grid } from '@mui/material';\n\nexport const Description = ({children}) => {\n    return (\n        <Grid item>\n            {children}\n        </Grid>\n    );\n}","import { Grid } from '@mui/material';\nimport { styled } from '@mui/system';\n\nconst Decorator = styled('div')`\n    display: inline-block;\n    content: '';\n    font-size: 1px;\n    line-height: .5rem;\n    padding: 1px;\n    border-radius: 50%;\n    vertical-align: 75%;\n    background-color: currentColor;\n    margin: 0px;\n`;\n\nexport const Item = ({children, decorated, ...props}) => {\n    return (\n        <Grid {...props} item>\n            <Grid container justifyContent=\"space-between\">\n                <Grid item>\n                    {!!decorated ? <Decorator/> : null}\n                </Grid>\n                <Grid item sx={{padding: `0px 5px 0px ${!!decorated ? '5px' : '0px'}`}}>\n                    {children}\n                </Grid>\n            </Grid>\n        </Grid>\n    );\n}","import { Grid } from '@mui/material';\nimport { Item } from './Item';\n\nconst DecoratedList = ({children, ...props}) => {\n    return (\n        <Grid {...props} container>\n            {children}\n        </Grid>\n    );\n}\n\nDecoratedList.Item = Item;\n\nexport { DecoratedList };\nexport default DecoratedList;","import { styled } from \"@mui/material/styles\";\nimport { space, layout } from \"styled-system\";\n\nexport const Image = styled('img')`\n    ${space}\n    ${layout}\n`;","import { useState } from 'react';\nimport { Grid, Button, TextField } from '@mui/material';\nimport axios from 'axios';\n\nexport const CreateBookForm = ({ setBooks }) => {\n  const [BookData, setBookData] = useState({\n    title: '',\n    author: '',\n    releaseYear: '',\n    bookRating: '',\n    runTime: '',\n    writers: ['', '', ''],\n    actors: ['', '', ''],\n    imageURL: '',\n    description: '',\n  });\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    console.log(BookData);\n    await axios.post(\n      `${process.env.REACT_APP_GATEWAY_URI}/${process.env.REACT_APP_GATEWAY_RESOURCE}`,\n      BookData\n    );\n    setBooks((Books) => [...Books, BookData]);\n    handleClear();\n  };\n\n  const handleClear = (e) => {\n    e?.preventDefault();\n    setBookData({\n      title: '',\n      author: '',\n      bookRating: '',\n      imageURL: '',\n      description: '',\n    });\n  };\n\n  return (\n    <form onSubmit={handleSubmit} style={{ backgroundColor: 'light-gray' }}>\n      <Grid container justifyContent='center'>\n        <Grid item>\n          <h2>Create a Book!</h2>\n        </Grid>\n      </Grid>\n      <Grid\n        container\n        gap={'15px'}\n        sx={{ margin: '20px 0px' }}\n        justifyContent={'space-between'}\n      >\n        <Grid item xs={6}>\n          <TextField\n            size='small'\n            label='Book Title'\n            variant='filled'\n            fullWidth\n            value={BookData.title}\n            onChange={(e) =>\n              setBookData({ ...BookData, title: e.target.value })\n            }\n          />\n        </Grid>\n        <Grid item xs={5}>\n          <TextField\n            size='small'\n            label='Book uthor'\n            variant='filled'\n            fullWidth\n            value={BookData.author}\n            onChange={(e) =>\n              setBookData({ ...BookData, author: e.target.value })\n            }\n          />\n        </Grid>\n      </Grid>\n      <Grid container gap={'15px'} sx={{ margin: '20px 0px' }}>\n        {/* <Grid item>\n          <TextField\n            size='small'\n            label='Release Year'\n            variant='filled'\n            value={BookData.releaseYear}\n            onChange={(e) =>\n              setBookData({ ...BookData, releaseYear: e.target.value })\n            }\n          />\n        </Grid> */}\n        {/* <Grid item>\n          <TextField\n            size='small'\n            label='Run Time'\n            variant='filled'\n            value={BookData.runTime}\n            onChange={(e) =>\n              setBookData({ ...BookData, runTime: e.target.value })\n            }\n          />\n        </Grid>*/}\n        <Grid item>\n          <TextField\n            size='small'\n            label='Content Rating'\n            variant='filled'\n            value={BookData.bookRating}\n            onChange={(e) =>\n              setBookData({ ...BookData, bookRating: e.target.value })\n            }\n          />\n        </Grid>\n      </Grid>\n      {/* <Grid container gap={'15px'} sx={{ margin: '20px 0px' }}>\n        <Grid item>\n          <TextField\n            size='small'\n            label='Actor 1'\n            variant='filled'\n            value={BookData.actors[0]}\n            onChange={(e) => {\n              const arr = BookData.actors;\n              arr[0] = e.target.value;\n              setBookData({ ...BookData, actors: arr });\n            }}\n          />\n        </Grid>\n        <Grid item>\n          <TextField\n            size='small'\n            label='Actor 2'\n            variant='filled'\n            value={BookData.actors[1]}\n            onChange={(e) => {\n              const arr = BookData.actors;\n              arr[1] = e.target.value;\n              setBookData({ ...BookData, actors: arr });\n            }}\n          />\n        </Grid>\n        <Grid item>\n          <TextField\n            size='small'\n            label='Actor 3'\n            variant='filled'\n            value={BookData.actors[2]}\n            onChange={(e) => {\n              const arr = BookData.actors;\n              arr[2] = e.target.value;\n              setBookData({ ...BookData, actors: arr });\n            }}\n          />\n        </Grid>\n      </Grid> */}\n      {/* <Grid container gap={'15px'} sx={{ margin: '20px 0px' }}>\n        <Grid item>\n          <TextField\n            size='small'\n            label='Writer 1'\n            variant='filled'\n            value={BookData.writers[0]}\n            onChange={(e) => {\n              const arr = BookData.writers;\n              arr[0] = e.target.value;\n              setBookData({ ...BookData, writers: arr });\n            }}\n          />\n        </Grid>\n        <Grid item>\n          <TextField\n            size='small'\n            label='Writer 2'\n            variant='filled'\n            value={BookData.writers[1]}\n            onChange={(e) => {\n              const arr = BookData.writers;\n              arr[1] = e.target.value;\n              setBookData({ ...BookData, writers: arr });\n            }}\n          />\n        </Grid>\n        <Grid item>\n          <TextField\n            size='small'\n            label='Writer 3'\n            variant='filled'\n            value={BookData.writers[2]}\n            onChange={(e) => {\n              const arr = BookData.writers;\n              arr[2] = e.target.value;\n              setBookData({ ...BookData, writers: arr });\n            }}\n          />\n        </Grid>\n      </Grid> */}\n      <Grid container gap={'15px'} sx={{ margin: '20px 0px' }}>\n        <Grid item xs={12}>\n          <TextField\n            size='small'\n            label='Image URL'\n            variant='filled'\n            fullWidth\n            value={BookData.imageURL}\n            onChange={(e) =>\n              setBookData({ ...BookData, imageURL: e.target.value })\n            }\n          />\n        </Grid>\n      </Grid>\n      <Grid container gap={'15px'} sx={{ margin: '20px 0px' }}>\n        <Grid item xs={12}>\n          <TextField\n            size='small'\n            label='Description'\n            variant='filled'\n            fullWidth\n            value={BookData.description}\n            onChange={(e) =>\n              setBookData({ ...BookData, description: e.target.value })\n            }\n          />\n        </Grid>\n      </Grid>\n      <Grid container justifyContent='space-between'>\n        <Grid item xs={4}>\n          <Button\n            variant='outlined'\n            type='button'\n            onClick={handleClear}\n            fullWidth\n          >\n            Clear\n          </Button>\n        </Grid>\n        <Grid item xs={4}>\n          <Button variant='outlined' type='submit' fullWidth>\n            Submit\n          </Button>\n        </Grid>\n      </Grid>\n    </form>\n  );\n};\n","import { useState, useEffect } from 'react';\nimport { Card, Grid, Typography } from '@mui/material';\nimport Header, { Title, Body } from './components/Header';\nimport { Book as BookCard } from './components/Cards';\nimport { DecoratedList } from './components/Lists';\nimport { Image } from './components/Image';\nimport { CreateBookForm } from './components/Form';\n// import Books from './utils/Books.example';\nimport axios from 'axios';\n\nexport const App = () => {\n  const [Books, setBooks] = useState([]);\n\n  useEffect(() => {\n    axios\n      .get(\n        `${process.env.REACT_APP_GATEWAY_URI}/${process.env.REACT_APP_GATEWAY_RESOURCE}`\n      )\n      .then((res) => {\n        console.log(res);\n        setBooks(res.data.Items ?? []);\n      });\n  }, []);\n\n  return (\n    <>\n      <Grid container justifyContent='center'>\n        <Grid item>\n          {/* Please change the header title or body text to whatever you wish */}\n          <Header>\n            <Title>High Velocity Learning Books</Title>\n            <Body>\n              Books delivered to you through the power of serverless computing!\n            </Body>\n          </Header>\n        </Grid>\n      </Grid>\n      <Grid container justifyContent='center' sx={{ margin: '30px 0px' }}>\n        <Grid item>\n          <Card sx={{ padding: '20px' }}>\n            <CreateBookForm setBooks={setBooks} />\n          </Card>\n        </Grid>\n      </Grid>\n      <Grid\n        container\n        justifyContent='center'\n        spacing={2}\n        sx={{ padding: '5em 0' }}\n      >\n        {Books?.length > 0 ? (\n          Books?.map((Book) => {\n            return (\n              <Grid item>\n                <BookCard>\n                  <BookCard.Title\n                    title={Book.title || ''}\n                    subheader={\n                      <DecoratedList>\n                        {/* {!!Book.releaseYear ? (\n                          <DecoratedList.Item>\n                            {Book.releaseYear}\n                          </DecoratedList.Item>\n                        ) : null} */}\n                        {!!Book.bookRating ? (\n                          <DecoratedList.Item decorated>\n                            {Book.bookRating}\n                          </DecoratedList.Item>\n                        ) : null}\n                        {!!Book.runTime ? (\n                          <DecoratedList.Item decorated>\n                            {Book.runTime}\n                          </DecoratedList.Item>\n                        ) : null}\n                      </DecoratedList>\n                    }\n                  />\n                  <BookCard.Body>\n                    <Grid container>\n                      <Grid item xs={10} sx={{ padding: '0px 5px 0px 0px' }}>\n                        <Grid container direction='column' spacing='1em'>\n                          <BookCard.Description>\n                            <Typography>{Book.description || ''}</Typography>\n                          </BookCard.Description>\n                          <BookCard.Description>\n                            <hr />\n                            <DecoratedList>\n                              <DecoratedList.Item>\n                                <strong>\n                                  {Book?.authors?.length > 1 ||\n                                  typeof Book.author != 'string'\n                                    ? 'authors'\n                                    : 'author'}\n                                </strong>\n                              </DecoratedList.Item>\n                              {typeof Book.author == 'string' ? (\n                                <DecoratedList.Item>\n                                  {Book.author}\n                                </DecoratedList.Item>\n                              ) : (\n                                Book?.authors?.map((author, index) => {\n                                  return (\n                                    <DecoratedList.Item decorated={index !== 0}>\n                                      {author}\n                                    </DecoratedList.Item>\n                                  );\n                                })\n                              )}\n                            </DecoratedList>\n                          </BookCard.Description>\n                          <BookCard.Description>\n                            <hr />\n                            {/* <DecoratedList>\n                              <DecoratedList.Item>\n                                <strong>\n                                  {Book?.writers?.length > 1\n                                    ? 'Writers'\n                                    : 'Writer'}\n                                </strong>\n                              </DecoratedList.Item>\n                              {Book?.writers?.map((writer, index) => {\n                                return Book?.writers[index] ? (\n                                  <DecoratedList.Item decorated={index !== 0}>\n                                    {writer}\n                                  </DecoratedList.Item>\n                                ) : null;\n                              })}\n                            </DecoratedList> */}\n                          </BookCard.Description>\n                          <BookCard.Description>\n                            <hr />\n                            <DecoratedList>\n                              <DecoratedList.Item>\n                                <strong>\n                                  {Book?.actors?.length > 1\n                                    ? 'Actors'\n                                    : 'Actor'}\n                                </strong>\n                              </DecoratedList.Item>\n                              {Book?.actors?.map((actor, index) => {\n                                return (\n                                  <DecoratedList.Item decorated={index !== 0}>\n                                    {actor}\n                                  </DecoratedList.Item>\n                                );\n                              })}\n                            </DecoratedList>\n                          </BookCard.Description>\n                        </Grid>\n                      </Grid>\n                      {!!Book.imageURL ? (\n                        <Grid item xs={2}>\n                          <Image src={Book.imageURL} width='100%' />\n                        </Grid>\n                      ) : null}\n                    </Grid>\n                  </BookCard.Body>\n                </BookCard>\n              </Grid>\n            );\n          })\n        ) : (\n          <BookCard>\n            <Grid container justifyContent='center' textAlign='center'>\n              <Grid item sx={{ padding: '24px 5px 0px 0px' }}>\n                <BookCard.Body>\n                  <BookCard.Description>\n                    <Typography sx={{ maxWidth: '42vw', minWidth: '42vw' }}>\n                      Your DynamoDB table is currently empty! If you'd like to\n                      add a Book, ensure that your Lambdas and API Gateway have\n                      been properly configured and their respective endpoints\n                      have been added to the .env file. Once you've done that,\n                      use the form below to add any Books to your DynamoDB\n                      table!\n                    </Typography>\n                  </BookCard.Description>\n                </BookCard.Body>\n              </Grid>\n            </Grid>\n          </BookCard>\n        )}\n      </Grid>\n    </>\n  );\n};\n","import { render } from 'react-dom';\nimport { StyleProvider } from './providers/StyleProvider';\nimport { App } from './App';\n\nrender(\n    <StyleProvider>\n        <App />\n    </StyleProvider>,\n    document.querySelector('#root')\n);"],"sourceRoot":""}